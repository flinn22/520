# This code can tokenize sentences, and doesnâ€™t include abbreviations.  
#  One problem with it is that it excludes the abbreviations from the output altogether.  
# However, it does produce an accurate sentence count.

file_content = 'Mr. Brown went to the store...  I saw him with my own eyes.  What was he buying?  Coffee!'
import re # Import the library of regular expressions

sentence_tokenization = re.findall(r"[^\.!\?]+[\.!\?]+", file_content) # Tokenize the sentences, by identifying a period, 
# question mark, or exclamation point, preceeded by text which does not contain these characters.
abbreviations = re.findall(r"[A-Z{2,4}]\w+[.]", file_content) #Find all of the abbreviations, by finding text that starts with
# capital letter, contains 2-4 word characters, and ends with a period.

for x in abbreviations: # For each token identified as an abbreviation...
     sentence_tokenization.remove(x) # Remove it from the tokenized sentences
print(sentence_tokenization) # Print the tokenized sentences (and do not include the abbreviations)
print(len(sentence_tokenization)) # Print the total number of tokenized sentences
